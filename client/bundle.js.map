{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/js/utils/constants.js","webpack:///./client/js/helpers/elements.js","webpack:///./client/js/app.js","webpack:///./client/js/states/boot.js","webpack:///./client/js/states/preload.js","webpack:///./client/js/states/menu.js","webpack:///./client/js/states/select_map.js","webpack:///./client/js/states/pending_game.js","webpack:///./client/js/states/play.js","webpack:///./client/js/utils/utils.js","webpack:///./client/js/entities/player.js","webpack:///./client/js/entities/info.js","webpack:///./client/js/entities/enemy_player.js","webpack:///./client/js/entities/bomb.js","webpack:///./client/js/entities/spoil.js","webpack:///./client/js/entities/fire_blast.js","webpack:///./client/js/entities/bone.js","webpack:///./client/js/states/win.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Text","Phaser","game","x","y","text","style","anchor","setTo","add","existing","Button","asset","callback","callbackContext","overFrame","outFrame","downFrame","upFrame","TextButton","label","addChild","this","setFrames","inputEnabled","input","useHandCursor","GameSlots","Group","availableGames","yOffset","availableGame","gameBox","Image","button","width","game_id","id","callAll","PlayerSlots","max_players","players","asset_empty","asset_player","xOffset","slotBox","slotName","_player","skin","height","SpoilNotification","picture","tween","to","alpha","onComplete","finish","start","Game","AUTO","config","state","Boot","Preload","Menu","SelectMap","PendingGame","Play","Win","State","stage","disableVisibilityChange","world","centerX","centerY","font","fill","load","image","spritesheet","tilemap","Tilemap","TILED_JSON","slotsWithGame","clientSocket","on","displayPendingGames","stroke","strokeThickness","hostGameAction","emit","destroy","joinGameAction","slider","phaseSlider","hotMapImage","coldMapImage","createSlider","customHandlePrev","customHandleNext","objects","confirmStageSelection","map_name","AVAILABLE_MAPS","getCurrentIndex","joinToNewGame","slotsWithPlayer","displayGameInfo","launchGame","gameTitle","startGameButton","startGameAction","disable","leaveGameAction","current_game","values","length","enable","currentGame","createMap","createPlayers","setEventHandlers","time","events","loop","stopAnimationLoop","physics","arcade","collide","player","blockLayer","enemies","bombs","overlap","spoils","onPlayerVsSpoil","blasts","onPlayerVsBlast","map","addTilesetImage","TILESET","createLayer","LAYER","resizeWorld","setCollision","layer","properties","collisionTiles","bones","group","setup","spawn","Player","EnemyPlayer","onMovePlayer","onPlayerWin","onShowBomb","onDetonateBomb","onSpoilWasPicked","onShowBones","onPlayerDisconnect","spoil","spoil_id","kill","blast","alive","col","currentCol","row","currentRow","becomesDead","player_id","enemy","findFrom","goTo","children","lastMoveAt","now","animations","stop","bomb_id","Bomb","blastedCells","findAndDestroyFrom","cell","FireBlast","destroyed","putTile","empty","Spoil","spoil_type","pickSpoil","Bone","winner_skin","entities","entity","Sprite","prevPosition","delay","INITIAL_DELAY","power","INITIAL_POWER","speed","INITIAL_SPEED","_lastBombTime","body","setSize","PING","positionUpdaterLoop","info","Info","defineKeyboard","defineSelf","handleMoves","handleBombs","upKey","keyboard","addKey","Keyboard","UP","downKey","DOWN","leftKey","LEFT","rightKey","RIGHT","spaceKey","SPACEBAR","velocity","set","animationsArray","isDown","push","currentAnimation","play","Math","floor","position","TILE_SIZE","newPosition","showDeadInfo","SPEED","increaseSpeed","POWER","increasePower","DELAY","increaseDelay","MAX_SPEED","STEP_SPEED","refreshStatistic","MIN_DELAY","STEP_DELAY","STEP_POWER","playerText","align","redStyle","bootsIcon","speedText","speedLabel","powerIcon","powerText","powerLabel","delayIcon","delayText","delayLabel","deadText","visible","currentPosition","immovable","animateFace","Easing","Linear","None","face","diffX","diffY","centerCol","centerRow","scale","EXPLOSION_TIME","type","winnerText","ENTER","returnToMenu"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export const AVAILABLE_MAPS = ['hot_map', 'cold_map']\nexport const TILESET = 'tiles';\nexport const LAYER   = 'Blocks';\n\nexport const TILE_SIZE = 35;\nexport const EXPLOSION_TIME = 2000;\nexport const PING = 100;\n\nexport const SPEED = 0\nexport const POWER = 1\nexport const DELAY = 2\n\nexport const INITIAL_SPEED = 150\nexport const STEP_SPEED = 50\nexport const MAX_SPEED = 350\nexport const INITIAL_DELAY = 2000\nexport const STEP_DELAY = 500\nexport const MIN_DELAY = 500\nexport const INITIAL_POWER = 1\nexport const STEP_POWER = 1\n","export class Text extends Phaser.Text {\n\n  constructor({ game, x, y, text, style }) {\n    super(game, x, y, text, style);\n    this.anchor.setTo(0.5);\n\n    this.game.add.existing(this);\n  }\n\n}\n\nexport class Button extends Phaser.Button {\n\n  constructor({ game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame }) {\n    super(game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame);\n    this.anchor.setTo(0.5);\n\n    this.game.add.existing(this);\n  }\n\n}\n\nexport class TextButton extends Phaser.Button {\n\n  constructor({ game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame, label, style }) {\n    super(game, x, y, asset, callback, callbackContext, overFrame, outFrame, downFrame, upFrame);\n    this.anchor.setTo(0.5);\n\n    this.text = new Phaser.Text(this.game, 0, 0, label, style);\n    this.text.anchor.setTo(0.5);\n\n    this.addChild(this.text);\n\n    this.game.add.existing(this);\n  }\n\n  disable() {\n    this.setFrames(3, 3);\n    this.inputEnabled = false;\n    this.input.useHandCursor = false;\n  }\n\n  enable() {\n    this.setFrames(1, 0, 2);\n    this.inputEnabled = true;\n    this.input.useHandCursor = true;\n  }\n\n}\n\nexport class GameSlots extends Phaser.Group {\n\n  constructor({ game, availableGames, callback, callbackContext, x, y, style }) {\n    super(game);\n\n    let game_slot_asset = 'slot_backdrop'\n    let game_enter_asset = 'list_icon'\n\n    let yOffset = y;\n\n    for (let availableGame of availableGames) {\n      let gameBox = new Phaser.Image(this.game, x, yOffset, game_slot_asset)\n      let button = new Phaser.Button(this.game, gameBox.width - 100, 12, game_enter_asset, callback.bind(callbackContext, { game_id: availableGame.id }), null, 1, 0, 2, 1);\n      let text = new Phaser.Text(this.game, 30, 25, `Join Game: ${availableGame.name}`, style);\n\n      gameBox.addChild(button);\n      gameBox.addChild(text);\n\n      this.add(gameBox);\n\n      yOffset += 105;\n    }\n  }\n\n  destroy() {\n    this.callAll('kill') // destroy\n  }\n}\n\nexport class PlayerSlots extends Phaser.Group {\n\n  constructor({ game, max_players, players, x, y, asset_empty, asset_player, style }) {\n    super(game);\n\n    let xOffset = x;\n\n    for (let i = 0; i < max_players; i++) {\n      let slotBox\n      let slotName\n      let _player = players[i]\n\n      if (_player) {\n        slotBox = new Phaser.Image(this.game, xOffset, y, asset_player+_player.skin)\n        slotName = new Phaser.Text(this.game, slotBox.width/2, slotBox.height + 15, _player.skin, style);\n        slotName.anchor.setTo(0.5);\n        slotBox.addChild(slotName);\n      } else {\n        slotBox = new Phaser.Image(this.game, xOffset, y, asset_empty)\n      }\n\n      this.add(slotBox);\n      xOffset += 170;\n    }\n  }\n\n  destroy() {\n    this.callAll('kill')\n  }\n}\n\nexport class SpoilNotification extends Phaser.Group {\n\n  constructor({ game, asset, x, y }) {\n    super(game)\n\n    this.picture = new Phaser.Image(this.game, x, y - 20, asset);\n    this.picture.anchor.setTo(0.5);\n\n    this.add(this.picture);\n\n    this.tween = this.game.add.tween(this.picture);\n    this.tween.to({ y: this.picture.y - 25, alpha: 0 }, 600);\n\n    this.tween.onComplete.add(this.finish, this);\n\n    this.tween.start()\n  }\n\n  finish() {\n    this.callAll('kill')\n  }\n}\n","import Boot from './states/boot';\nimport Preload from './states/preload';\nimport Menu from './states/menu';\nimport SelectMap from './states/select_map';\nimport PendingGame from './states/pending_game';\nimport Play from './states/play';\nimport Win from './states/win';\n\nclass Game extends Phaser.Game {\n  constructor() {\n    super(980, 630, Phaser.AUTO, 'game-container');\n\n    // Tell Phaser to use setTimeOut even if RAF(request animation frame) is available.\n    this.config['forceSetTimeOut'] = true\n\n    this.state.add('Boot',         Boot);\n    this.state.add('Preload',      Preload);\n    this.state.add('Menu',         Menu);\n    this.state.add('SelectMap',    SelectMap);\n    this.state.add('PendingGame',  PendingGame);\n    this.state.add('Play',         Play);\n    this.state.add('Win',          Win);\n\n    this.state.start('Boot');\n  }\n}\n\nnew Game();\n","import { Text } from '../helpers/elements';\n\nclass Boot extends Phaser.State {\n\n  create() {\n    // Make the game keep reacting to messages from the server even when the game window doesn’t have focus.\n    // The game pauses when I open a new tab in the same window, but does not pause when I focus on another application\n    this.game.stage.disableVisibilityChange = true;\n\n    new Text({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY,\n      text: 'Loading...',\n      style: {\n        font: '30px Areal',\n        fill: '#FFFFFF'\n      }\n    })\n\n    this.state.start('Preload');\n  }\n\n}\n\nexport default Boot;\n","class Preload extends Phaser.State {\n\n  preload() {\n    // Menu:\n    this.load.image('main_menu',     'images/menu/main_menu.png');\n    this.load.image('slot_backdrop', 'images/menu/slot_backdrop.png');\n\n    this.load.spritesheet('buttons',    'images/menu/buttons.png', 200, 75);\n    this.load.spritesheet('check_icon', 'images/menu/accepts.png', 75, 75);\n    this.load.spritesheet('list_icon',  'images/menu/game_enter.png', 75, 75);\n\n    this.load.image('hot_map_preview',  'images/menu/hot_map_preview.png');\n    this.load.image('cold_map_preview', 'images/menu/cold_map_preview.png');\n    this.load.image('prev',             'images/menu/left_arrow.png');\n    this.load.image('next',             'images/menu/right_arrow.png');\n\n    // Map:\n    this.load.image('tiles',      'maps/tileset.png');\n    this.load.tilemap('hot_map',  'maps/hot_map.json', null, Phaser.Tilemap.TILED_JSON);\n    this.load.tilemap('cold_map', 'maps/cold_map.json', null, Phaser.Tilemap.TILED_JSON);\n\n\n    // Game:\n    this.load.spritesheet('explosion_center',     'images/game/explosion_center.png',     35, 35);\n    this.load.spritesheet('explosion_horizontal', 'images/game/explosion_horizontal.png', 35, 35);\n    this.load.spritesheet('explosion_vertical',   'images/game/explosion_vertical.png',   35, 35);\n    this.load.spritesheet('explosion_up',         'images/game/explosion_up.png',         35, 35);\n    this.load.spritesheet('explosion_right',      'images/game/explosion_right.png',      35, 35);\n    this.load.spritesheet('explosion_down',       'images/game/explosion_down.png',       35, 35);\n    this.load.spritesheet('explosion_left',       'images/game/explosion_left.png',       35, 35);\n\n    this.load.spritesheet('spoil_tileset', 'images/game/spoil_tileset.png', 35, 35);\n    this.load.spritesheet('bone_tileset',  'images/game/bone_tileset.png', 35, 35);\n    this.load.spritesheet('bomb_tileset',  'images/game/bombs.png', 35, 35);\n\n    this.load.image('speed_up_bonus',    'images/game/speed_up_bonus.png');\n    this.load.image('speed_up_no_bonus', 'images/game/speed_up_no_bonus.png');\n    this.load.image('delay_up_bonus',    'images/game/delay_up_bonus.png');\n    this.load.image('delay_up_no_bonus', 'images/game/delay_up_no_bonus.png');\n    this.load.image('power_up_bonus',    'images/game/power_up_bonus.png');\n\n    this.load.image('placeholder_power', 'images/game/placeholder_power.png');\n    this.load.image('placeholder_speed', 'images/game/placeholder_speed.png');\n    this.load.image('placeholder_time',  'images/game/placeholder_time.png');\n\n    // Skins:\n    this.load.image('bomberman_head_blank',     'images/game/chars/0-face.png');\n\n    this.load.image('bomberman_head_윈디',  'images/game/chars/1-face.png');\n    this.load.image('bomberman_head_학계정설',     'images/game/chars/2-face.png');\n    this.load.image('bomberman_head_오마이갓',  'images/game/chars/3-face.png');\n    this.load.image('bomberman_head_덤디덤디',    'images/game/chars/4-face.png');\n    this.load.image('bomberman_head_선장님',    'images/game/chars/5-face.png');\n    this.load.image('bomberman_head_JSY엔터대표',     'images/game/chars/6-face.png');\n    this.load.image('bomberman_head_아자사자',     'images/game/chars/7-face.png');\n    this.load.image('bomberman_head_연하공주',     'images/game/chars/8-face.png');\n    this.load.image('bomberman_head_천진반',   'images/game/chars/9-face.png');\n    this.load.image('bomberman_head_힙합꾸러기',    'images/game/chars/10-face.png');\n    this.load.image('bomberman_head_낭만땃쥐',     'images/game/chars/11-face.png');\n\n    this.load.spritesheet('bomberman_윈디',  'images/game/chars/1-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_학계정설',     'images/game/chars/2-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_오마이갓',  'images/game/chars/3-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_덤디덤디',    'images/game/chars/4-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_선장님',    'images/game/chars/5-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_JSY엔터대표',     'images/game/chars/6-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_아자사자',     'images/game/chars/7-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_연하공주',     'images/game/chars/8-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_천진반',   'images/game/chars/9-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_힙합꾸러기',    'images/game/chars/10-preview.png', 32, 32);\n    this.load.spritesheet('bomberman_낭만땃쥐',     'images/game/chars/11-preview.png', 32, 32);\n  }\n\n  create() {\n    this.state.start('Menu');\n  }\n}\n\nexport default Preload;\n","import { Text, TextButton, GameSlots } from '../helpers/elements';\n\nclass Menu extends Phaser.State {\n\n  init() {\n    this.slotsWithGame = null;\n\n    clientSocket.on('display pending games', this.displayPendingGames.bind(this));\n  }\n\n  create() {\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\n    background.anchor.setTo(0.5);\n\n\n    new Text({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY - 212,\n      text: '크레이지 젤리말콘',\n      style: {\n        font: '20px Areal',\n        fill: '#9ec0ba',\n        stroke: '#7f9995',\n        strokeThickness: 3\n      }\n    })\n\n    new TextButton({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY + 195,\n      asset: 'buttons',\n      callback: this.hostGameAction,\n      callbackContext: this,\n      overFrame: 1,\n      outFrame: 0,\n      downFrame: 2,\n      upFrame: 0,\n      label: 'New Game',\n      style: {\n        font: '20px Areal',\n        fill: '#000000'\n      }\n    });\n\n    clientSocket.emit('enter lobby', this.displayPendingGames.bind(this));\n  }\n\n  update() {\n  }\n\n  hostGameAction() {\n    clientSocket.emit('leave lobby');\n    this.state.start('SelectMap');\n  }\n\n  displayPendingGames(availableGames) {\n    // NOTE: That is not optimal way to preview slots,\n    //       we should implement AddSlotToGroup, RemoveSlotFromGroup\n\n    // I triying to care about readability, not about performance.\n    if (this.slotsWithGame) {\n      this.slotsWithGame.destroy()\n    }\n\n    this.slotsWithGame = new GameSlots({\n      game: this.game,\n      availableGames: availableGames,\n      callback: this.joinGameAction,\n      callbackContext: this,\n      x: this.game.world.centerX - 220,\n      y: 160,\n      style: {\n        font: '35px Areal',\n        fill: '#efefef',\n        stroke: '#ae743a',\n        strokeThickness: 3\n      }\n    })\n  }\n\n  joinGameAction(game_id) {\n    clientSocket.emit('leave lobby');\n    // https://phaser.io/docs/2.6.2/Phaser.StateManager.html#start\n    this.state.start('PendingGame', true, false, game_id);\n  }\n}\n\nexport default Menu;\n","import { AVAILABLE_MAPS } from '../utils/constants';\nimport { Text, Button } from '../helpers/elements';\n\nclass SelectMap extends Phaser.State {\n\n  init() {\n    this.slider = new phaseSlider(this);\n  }\n\n  create() {\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\n    background.anchor.setTo(0.5);\n\n    new Text({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY - 215,\n      text: 'Select Map',\n      style: {\n        font: '35px Areal',\n        fill: '#9ec0ba',\n        stroke: '#6f7975',\n        strokeThickness: 3\n      }\n    });\n\n\n    // WARN: https://github.com/netgfx/PhaseSlider/issues/1\n    let hotMapImage = new Phaser.Image(this.game, 0, 0, 'hot_map_preview');\n    let coldMapImage = new Phaser.Image(this.game, 0, 0, 'cold_map_preview');\n\n    this.slider.createSlider({\n      x: this.game.world.centerX - hotMapImage.width / 2,\n      y: this.game.world.centerY - coldMapImage.height / 2,\n      width: hotMapImage.width,\n      height: hotMapImage.height,\n      customHandlePrev: 'prev',\n      customHandleNext: 'next',\n      objects: [hotMapImage, coldMapImage]\n    });\n\n    new Button({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY + 195,\n      asset: 'check_icon',\n      callback: this.confirmStageSelection,\n      callbackContext: this,\n      overFrame: 1,\n      outFrame: 0,\n      downFrame: 2,\n      upFrame: 0,\n    })\n  }\n\n  confirmStageSelection() {\n    let map_name = AVAILABLE_MAPS[this.slider.getCurrentIndex()]\n\n    clientSocket.emit('create game', map_name, this.joinToNewGame.bind(this));\n  }\n\n  joinToNewGame(game_id) {\n    this.state.start('PendingGame', true, false, game_id);\n  }\n}\n\nexport default SelectMap;\n","import { Text, Button, TextButton, PlayerSlots } from '../helpers/elements';\n\nclass PendingGame extends Phaser.State {\n\n  init({ game_id }) {\n    this.slotsWithPlayer = null;\n\n    this.game_id = game_id;\n\n    clientSocket.on('update game', this.displayGameInfo.bind(this));\n    clientSocket.on('launch game', this.launchGame.bind(this));\n\n    clientSocket.emit('enter pending game', { game_id: this.game_id });\n  }\n\n  create() {\n    let background = this.add.image(this.game.world.centerX, this.game.world.centerY, 'main_menu');\n    background.anchor.setTo(0.5);\n\n    this.gameTitle = new Text({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY - 215,\n      text: '',\n      style: {\n        font: '35px Areal',\n        fill: '#9ec0ba',\n        stroke: '#6f7975',\n        strokeThickness: 3\n      }\n    })\n\n    this.startGameButton = new TextButton({\n      game: this.game,\n      x: this.game.world.centerX + 105,\n      y: this.game.world.centerY + 195,\n      asset: 'buttons',\n      callback: this.startGameAction,\n      callbackContext: this,\n      overFrame: 1,\n      outFrame: 0,\n      downFrame: 2,\n      upFrame: 0,\n      label: 'Start Game',\n      style: {\n        font: '20px Areal',\n        fill: '#000000'\n      }\n    });\n\n    this.startGameButton.disable()\n\n    new TextButton({\n      game: this.game,\n      x: this.game.world.centerX - 105,\n      y: this.game.world.centerY + 195,\n      asset: 'buttons',\n      callback: this.leaveGameAction,\n      callbackContext: this,\n      overFrame: 1,\n      outFrame: 0,\n      downFrame: 2,\n      upFrame: 0,\n      label: 'Leave Game',\n      style: {\n        font: '20px Areal',\n        fill: '#000000'\n      }\n    });\n\n  }\n\n  displayGameInfo({ current_game }) {\n    let players = Object.values(current_game.players);\n\n    this.gameTitle.text = current_game.name\n\n    if (this.slotsWithPlayer) {\n      this.slotsWithPlayer.destroy()\n    }\n\n    this.slotsWithPlayer = new PlayerSlots({\n      game: this.game,\n      max_players: current_game.max_players,\n      players: players,\n      x: this.game.world.centerX - 245,\n      y: this.game.world.centerY - 80,\n      asset_empty: 'bomberman_head_blank',\n      asset_player: 'bomberman_head_',\n      style: {\n        font: '20px Areal',\n        fill: '#48291c'\n      }\n    })\n\n    if(players.length > 1) {\n      this.startGameButton.enable();\n    } else {\n      this.startGameButton.disable();\n    }\n  }\n\n  leaveGameAction() {\n    clientSocket.emit('leave pending game');\n\n    this.state.start('Menu');\n  }\n\n  startGameAction() {\n    clientSocket.emit('start game');\n  }\n\n  launchGame(game) {\n    this.state.start('Play', true, false, game);\n  }\n}\n\nexport default PendingGame;\n","import { findFrom, findAndDestroyFrom } from '../utils/utils';\nimport { TILESET, LAYER } from '../utils/constants';\n\nimport Player from '../entities/player';\nimport EnemyPlayer from '../entities/enemy_player';\nimport Bomb from '../entities/bomb';\nimport Spoil from '../entities/spoil';\nimport FireBlast from '../entities/fire_blast';\nimport Bone from '../entities/bone';\n\nclass Play extends Phaser.State {\n  init(game) {\n    this.currentGame = game\n  }\n\n  create() {\n    this.createMap();\n    this.createPlayers();\n    this.setEventHandlers();\n\n    this.game.time.events.loop(400 , this.stopAnimationLoop.bind(this));\n  }\n\n  update() {\n    this.game.physics.arcade.collide(this.player, this.blockLayer);\n    this.game.physics.arcade.collide(this.player, this.enemies);\n    this.game.physics.arcade.collide(this.player, this.bombs);\n\n    this.game.physics.arcade.overlap(this.player, this.spoils, this.onPlayerVsSpoil, null, this);\n    this.game.physics.arcade.overlap(this.player, this.blasts, this.onPlayerVsBlast, null, this);\n  }\n\n  createMap() {\n    this.map = this.add.tilemap(this.currentGame.map_name);\n\n    this.map.addTilesetImage(TILESET);\n\n    this.blockLayer = this.map.createLayer(LAYER);\n    this.blockLayer.resizeWorld();\n\n    this.map.setCollision(this.blockLayer.layer.properties.collisionTiles)\n\n    this.player  = null;\n    this.bones   = this.game.add.group();\n    this.bombs   = this.game.add.group();\n    this.spoils  = this.game.add.group();\n    this.blasts  = this.game.add.group();\n    this.enemies = this.game.add.group();\n\n    this.game.physics.arcade.enable(this.blockLayer);\n  }\n\n  createPlayers() {\n    for (let player of Object.values(this.currentGame.players)) {\n      let setup = {\n        game:   this.game,\n        id:     player.id,\n        spawn:  player.spawn,\n        skin:   player.skin\n      }\n\n      if (player.id === clientSocket.id) {\n        this.player = new Player(setup);\n      } else {\n        this.enemies.add(new EnemyPlayer(setup))\n      }\n    }\n  }\n\n  setEventHandlers() {\n    clientSocket.on('move player', this.onMovePlayer.bind(this));\n    clientSocket.on('player win', this.onPlayerWin.bind(this));\n    clientSocket.on('show bomb', this.onShowBomb.bind(this));\n    clientSocket.on('detonate bomb', this.onDetonateBomb.bind(this));\n    clientSocket.on('spoil was picked', this.onSpoilWasPicked.bind(this));\n    clientSocket.on('show bones', this.onShowBones.bind(this));\n    clientSocket.on('player disconnect', this.onPlayerDisconnect.bind(this));\n  }\n\n  onPlayerVsSpoil(player, spoil) {\n    clientSocket.emit('pick up spoil', { spoil_id: spoil.id });\n    spoil.kill();\n  }\n\n  onPlayerVsBlast(player, blast) {\n    if (player.alive) {\n      clientSocket.emit('player died', { col: player.currentCol(), row: player.currentRow() });\n      player.becomesDead()\n    }\n  }\n\n  onMovePlayer({ player_id, x, y }) {\n    let enemy = findFrom(player_id, this.enemies);\n    if (!enemy) { return }\n\n    enemy.goTo({ x: x, y: y })\n  }\n\n  stopAnimationLoop() {\n    for (let enemy of this.enemies.children) {\n      if (enemy.lastMoveAt < this.game.time.now - 200) {\n        enemy.animations.stop();\n      }\n    }\n  }\n\n  onShowBomb({ bomb_id, col, row }) {\n    this.bombs.add(new Bomb(this.game, bomb_id, col, row));\n  }\n\n  onDetonateBomb({ bomb_id, blastedCells }) {\n    // Remove Bomb:\n    findAndDestroyFrom(bomb_id, this.bombs)\n\n    // Render Blast:\n    for (let cell of blastedCells) {\n      this.blasts.add(new FireBlast(this.game, cell));\n    };\n\n    // Destroy Tiles:\n    for (let cell of blastedCells) {\n      if (!cell.destroyed) { continue }\n\n      this.map.putTile(this.blockLayer.layer.properties.empty, cell.col, cell.row, this.blockLayer);\n    };\n\n    // Add Spoils:\n    for (let cell of blastedCells) {\n      if (!cell.destroyed) { continue }\n      if (!cell.spoil) { continue }\n\n      this.spoils.add(new Spoil(this.game, cell.spoil));\n    };\n  }\n\n  onSpoilWasPicked({ player_id, spoil_id, spoil_type }){\n    if (player_id === this.player.id){\n      this.player.pickSpoil(spoil_type)\n    }\n\n    findAndDestroyFrom(spoil_id, this.spoils)\n  }\n\n  onShowBones({ player_id, col, row }) {\n    this.bones.add(new Bone(this.game, col, row));\n\n    findAndDestroyFrom(player_id, this.enemies)\n  }\n\n  onPlayerWin(winner_skin) {\n    clientSocket.emit('leave game');\n\n    this.state.start('Win', true, false, winner_skin);\n  }\n\n  onPlayerDisconnect({ player_id }) {\n    findAndDestroyFrom(player_id, this.enemies);\n\n    if (this.enemies.children.length >= 1) { return }\n\n    this.onPlayerWin()\n  }\n}\n\nexport default Play;\n","export const findFrom = function(id, entities) {\n  for (let entity of entities.children) {\n    if (entity.id !== id) { continue }\n\n    return entity\n  }\n  return null;\n}\n\nexport const findAndDestroyFrom = function(id, entities) {\n  let entity = findFrom(id, entities);\n  if (!entity) { return }\n\n  entity.destroy()\n}\n","import {\n  PING, TILE_SIZE, MAX_SPEED, STEP_SPEED, INITIAL_SPEED, SPEED, POWER, DELAY,\n  MIN_DELAY, STEP_DELAY, INITIAL_DELAY, INITIAL_POWER, STEP_POWER\n} from '../utils/constants';\n\nimport Info from './info';\nimport { SpoilNotification, Text } from '../helpers/elements';\n\nexport default class Player extends Phaser.Sprite {\n\n  constructor({ game, id, spawn, skin }) {\n    super(game, spawn.x, spawn.y, 'bomberman_' + skin);\n\n    this.game = game;\n    this.id = id;\n\n    this.prevPosition = { x: spawn.x, y: spawn.y };\n\n    this.delay = INITIAL_DELAY;\n    this.power = INITIAL_POWER;\n    this.speed = INITIAL_SPEED;\n    this._lastBombTime = 0;\n\n    this.game.add.existing(this);\n    this.game.physics.arcade.enable(this);\n    this.body.setSize(20, 20, 6, 6);\n\n    game.time.events.loop(PING , this.positionUpdaterLoop.bind(this));\n\n    this.animations.add('up', [9, 10, 11], 15, true);\n    this.animations.add('down', [0, 1, 2], 15, true);\n    this.animations.add('right', [6, 7, 8], 15, true);\n    this.animations.add('left', [3, 4, 5], 15, true);\n\n    this.info = new Info({ game: this.game, player: this });\n\n    this.defineKeyboard()\n    this.defineSelf(skin)\n  }\n\n  update() {\n    if (this.alive) {\n      this.handleMoves()\n      this.handleBombs()\n    }\n\n    // this.game.debug.body(this);\n    // this.game.debug.spriteInfo(this, 32, 32);\n  }\n\n  defineKeyboard() {\n    this.upKey    = this.game.input.keyboard.addKey(Phaser.Keyboard.UP)\n    this.downKey  = this.game.input.keyboard.addKey(Phaser.Keyboard.DOWN)\n    this.leftKey  = this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT)\n    this.rightKey = this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT)\n    this.spaceKey = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR)\n  }\n\n  handleMoves() {\n    this.body.velocity.set(0);\n    let animationsArray = []\n\n    if (this.leftKey.isDown){\n      this.body.velocity.x = -this.speed;\n      animationsArray.push('left')\n    } else if (this.rightKey.isDown) {\n      this.body.velocity.x = this.speed;\n      animationsArray.push('right')\n    }\n\n    if (this.upKey.isDown) {\n      this.body.velocity.y = -this.speed;\n      animationsArray.push('up')\n    } else if (this.downKey.isDown) {\n      this.body.velocity.y = this.speed;\n      animationsArray.push('down')\n    }\n\n    let currentAnimation = animationsArray[0]\n    if (currentAnimation){\n      this.animations.play(currentAnimation)\n      return\n    }\n\n    this.animations.stop();\n  }\n\n  handleBombs() {\n    if (this.game.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)) {\n      let now = this.game.time.now;\n\n      if (now > this._lastBombTime) {\n        this._lastBombTime = now + this.delay;\n\n        clientSocket.emit('create bomb', { col: this.currentCol(), row: this.currentRow() });\n      }\n    }\n  }\n\n  currentCol() {\n    return Math.floor(this.body.position.x / TILE_SIZE)\n  }\n\n  currentRow() {\n    return Math.floor(this.body.position.y / TILE_SIZE)\n  }\n\n  positionUpdaterLoop() {\n    let newPosition = { x: this.position.x, y: this.position.y }\n\n    if (this.prevPosition.x !== newPosition.x || this.prevPosition.y !== newPosition.y) {\n      clientSocket.emit('update player position', newPosition);\n      this.prevPosition = newPosition;\n    }\n  }\n\n  becomesDead() {\n    this.info.showDeadInfo()\n    this.kill();\n  }\n\n  pickSpoil( spoil_type ){\n    if ( spoil_type === SPEED ){ this.increaseSpeed() }\n    if ( spoil_type === POWER ){ this.increasePower() }\n    if ( spoil_type === DELAY ){ this.increaseDelay() }\n  }\n\n  increaseSpeed(){\n    let asset = 'speed_up_no_bonus'\n\n    if (this.speed < MAX_SPEED) {\n      this.speed = this.speed + STEP_SPEED;\n      this.info.refreshStatistic();\n      asset = 'speed_up_bonus'\n    }\n\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\n  }\n\n  increaseDelay(){\n    let asset = 'delay_up_no_bonus'\n\n    if (this.delay > MIN_DELAY){\n      this.delay -= STEP_DELAY;\n      this.info.refreshStatistic();\n      asset = 'delay_up_bonus'\n    }\n\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\n  }\n\n  increasePower(){\n    let asset = 'power_up_bonus'\n\n    this.power += STEP_POWER;\n    this.info.refreshStatistic();\n\n    new SpoilNotification({ game: this.game, asset: asset, x: this.position.x, y: this.position.y })\n  }\n\n  defineSelf(name) {\n    let playerText = new Text({\n      game: this.game,\n      x: TILE_SIZE / 2,\n      y: -10,\n      text: `\\u272E ${name} \\u272E`,\n      style: {\n        font: '15px Areal',\n        fill: '#FFFFFF',\n          stroke: '#000000',\n          strokeThickness: 3\n      }\n    })\n\n    this.addChild(playerText);\n  }\n}\n","export default class Info {\n\n  constructor({ game, player }) {\n    this.game = game;\n    this.player = player;\n\n    this.style    = { font: '14px Arial', fill: '#ffffff', align: 'left' }\n    this.redStyle = { font: '30px Arial', fill: '#ff0044', align: 'center' };\n\n    let bootsIcon  = new Phaser.Image(this.game, 5, 2, 'placeholder_speed');\n    this.speedText = new Phaser.Text(this.game, 35, 7, this.speedLabel(), this.style);\n    bootsIcon.addChild(this.speedText)\n    this.game.add.existing(bootsIcon);\n\n    let powerIcon  = new Phaser.Image(this.game, 110, 2, 'placeholder_power');\n    this.powerText = new Phaser.Text(this.game, 35, 7, this.powerLabel(), this.style);\n    powerIcon.addChild(this.powerText)\n    this.game.add.existing(powerIcon);\n\n    let delayIcon  = new Phaser.Image(this.game, 215, 2, 'placeholder_time');\n    this.delayText = new Phaser.Text(this.game, 35, 7, this.delayLabel(), this.style);\n    delayIcon.addChild(this.delayText)\n    this.game.add.existing(delayIcon);\n\n    this.deadText = this.game.add.text(this.game.world.centerX, this.game.world.height - 30, 'You died :(', this.redStyle);\n    this.deadText.anchor.set(0.5);\n    this.deadText.visible = false\n  }\n\n  refreshStatistic() {\n    this.speedText.text = this.speedLabel();\n    this.powerText.text = this.powerLabel();\n    this.delayText.text = this.delayLabel();\n  }\n\n  showDeadInfo() {\n    this.deadText.visible = true\n  }\n\n  speedLabel() {\n    return this.player.speed\n  }\n\n  powerLabel() {\n    return `x ${this.player.power}`\n  }\n\n  delayLabel() {\n    return `${this.player.delay / 1000} sec.`\n  }\n}\n","import { TILE_SIZE, PING } from '../utils/constants';\nimport { Text } from '../helpers/elements';\n\nexport default class EnemyPlayer extends Phaser.Sprite {\n\n  constructor({ game, id, spawn, skin }) {\n    super(game, spawn.x, spawn.y, 'bomberman_' + skin);\n\n    this.game = game\n    this.id = id;\n\n    this.currentPosition = spawn;\n    this.lastMoveAt = 0;\n\n    this.game.physics.arcade.enable(this);\n    this.body.setSize(20, 20, 6, 6);\n    this.body.immovable = true;\n\n    this.animations.add('up', [9, 10, 11], 15, true);\n    this.animations.add('down', [0, 1, 2], 15, true);\n    this.animations.add('right', [6, 7, 8], 15, true);\n    this.animations.add('left', [3, 4, 5], 15, true);\n\n    this.defineSelf(skin)\n  }\n\n  update () {\n    // this.game.debug.body(this);\n  }\n\n  goTo(newPosition) {\n    this.lastMoveAt = this.game.time.now;\n\n    this.animateFace(newPosition);\n\n    this.game.add.tween(this).to(newPosition, PING, Phaser.Easing.Linear.None, true);\n  }\n\n  animateFace(newPosition) {\n    let face = 'down';\n    let diffX = newPosition.x - this.currentPosition.x;\n    let diffY = newPosition.y - this.currentPosition.y;\n\n    if (diffX < 0) {\n      face = 'left'\n    } else if (diffX > 0) {\n      face = 'right'\n    } else if (diffY < 0) {\n      face = 'up'\n    } else if (diffY > 0) {\n      face = 'down'\n    }\n\n    this.animations.play(face)\n    this.currentPosition = newPosition;\n  }\n\n  defineSelf(name) {\n    let playerText = new Text({\n      game: this.game,\n      x: TILE_SIZE / 2,\n      y: -10,\n      text: name,\n      style: {\n        font: '14px Areal',\n        fill: '#FFFFFF',\n          stroke: '#000000',\n          strokeThickness: 3\n      }\n    })\n\n    this.addChild(playerText);\n  }\n}\n","import { TILE_SIZE, EXPLOSION_TIME } from '../utils/constants';\n\nexport default class Bomb extends Phaser.Sprite {\n\n  constructor(game, id, col, row) {\n    let centerCol = (col * TILE_SIZE) + TILE_SIZE / 2\n    let centerRow = (row * TILE_SIZE) + TILE_SIZE / 2\n\n    super(game, centerCol, centerRow, 'bomb_tileset');\n    this.scale.setTo(0.7);\n    this.anchor.setTo(0.5);\n\n    this.game = game\n    this.id = id;\n\n    this.game.physics.arcade.enable(this);\n\n    this.game.add.tween(this.scale).to({ x: 1.2, y: 1.2 }, EXPLOSION_TIME, Phaser.Easing.Linear.None, true);\n\n    this.body.immovable = true;\n    // TODO: https://phaser.io/docs/2.4.4/Phaser.AnimationManager.html#add\n    this.animations.add('bomb', [0,1,2,3,4,5,6,7,8,9,10,11,12,13], 6, true);\n    this.animations.play('bomb');\n  }\n\n  update() {\n    // this.game.debug.body(this);\n  }\n\n}\n","import { SPEED, POWER, DELAY, TILE_SIZE } from '../utils/constants';\n\nexport default class Spoil extends Phaser.Sprite {\n\n  constructor(game, spoil) {\n\n    let spoil_type;\n    if (spoil.spoil_type === DELAY) {\n      spoil_type = 0\n    }\n    if (spoil.spoil_type === POWER) {\n      spoil_type =  1\n    }\n    if (spoil.spoil_type === SPEED) {\n      spoil_type = 2\n    }\n\n    super(game, (spoil.col * TILE_SIZE), (spoil.row * TILE_SIZE), 'spoil_tileset', spoil_type);\n\n    this.id = spoil.id\n\n    this.game.physics.arcade.enable(this);\n  }\n\n}\n","import { TILE_SIZE } from '../utils/constants';\n\nexport default class FireBlast extends Phaser.Sprite {\n\n  constructor(game, cell) {\n    super(game, (cell.col * TILE_SIZE), (cell.row * TILE_SIZE), cell.type, 0);\n\n    this.game = game\n\n    this.animations.add('blast', [0, 1, 2, 3, 4]);\n\n    // 15 - framerate, loop, kill_on_complete\n    this.play('blast', 15, false, true);\n\n    this.game.physics.arcade.enable(this);\n  }\n\n}\n","import { TILE_SIZE } from '../utils/constants';\n\nexport default class Bone extends Phaser.Sprite {\n\n  constructor(game, col, row) {\n    super(game, (col * TILE_SIZE), (row * TILE_SIZE), 'bone_tileset');\n  }\n\n}\n","import { Text } from '../helpers/elements';\n\nclass Win extends Phaser.State {\n\n  init(winner_skin) {\n    this.skin = winner_skin\n  }\n\n  create() {\n    new Text({\n      game: this.game,\n      x: this.game.world.centerX,\n      y: this.game.world.centerY,\n      text: this.winnerText(),\n      style: {\n        font: '30px Areal',\n        fill: '#FFFFFF'\n      }\n    })\n  }\n\n  update() {\n    if( this.game.input.keyboard.isDown(Phaser.Keyboard.ENTER) ) {\n      this.returnToMenu();\n    }\n  }\n\n  returnToMenu() {\n    this.state.start('Menu');\n  }\n\n  winnerText() {\n    if (this.skin) {\n      return `Player: \"${this.skin}\" won! Press Enter to return to main menu.`\n    }\n\n    return 'Opponent left! Press Enter to return to main menu.'\n  }\n}\n\nexport default Win;\n"],"sourceRoot":""}